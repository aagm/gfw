gfw.ui.model.Share = cdb.core.Model.extend({  
  defaults: {
    tooltip: $('body').hasClass('home') ? "Share this map view" : "Share this graphic"
  }
});

gfw.ui.view.Share = cdb.core.View.extend({
  className: 'share',

  events: {
    'click .share_control' : '_openShare'
  },

  initialize: function() {
    _.bindAll( this, '_toggle' );

    this.model = new gfw.ui.model.Share();

    this.model.on('change:hidden', this._toggle);

    var template = $('#share-template').html();

    this.template = new cdb.core.Template({
      template: template,
      type: 'mustache'
    });

    this._initViews();
  },

  _initViews: function() {
    this.share = new gfw.ui.view.ShareDialog({
      bitly: {
        key: "<%= ENV['BITLY_API_KEY'] %>",
        login: 'vizzuality'
      }
    });

    $('body').append(this.share.render());
  },

  _openShare: function(e) {
    e.preventDefault();

    this.share.show();
  },

  _toggle: function() {
    if (this.model.get('hidden')) {
      this.$el.hide();
    } else {
      this.$el.show();
    }
  },

  show: function() {
    this.model.set('hidden', false);
  },

  hide: function() {
    this.model.set('hidden', true);
  },

  render: function() {
    var that = this;

    this.$el.append(this.template.render( this.model.toJSON() ));
    this.$analysis_control = (this.$el.find('.analysis_control').length > 0) ? this.$el.find('.analysis_control') : null;
    if (!!this.$analysis_control) {
      $(this.$analysis_control).tipsy({ title: 'data-tip', fade: true, gravity: 'w' });
    }

    return this.$el;
  }
});


gfw.ui.model.ShareDialog = Backbone.Model.extend({
  defaults: {
    title: $('body').hasClass('home') ? "Share this map view" : "Share this graphic",
    help: "Click and paste link in email or IM",
    button_title: "Copy URL",
    hidden: false,
    mode: "link"
  }

});

gfw.ui.view.ShareDialog = gfw.ui.view.Widget.extend({
  className: 'share_dialog',

  events: {
    'click .close': 'hide',
    'click .mode_menu a': '_onClickMode',
    'click #printButton': '_openPrint'
  },

  initialize: function() {
    _.bindAll( this, 'toggle', '_toggleMode', '_onKeyDown' );

    this.options = _.extend(this.options, this.defaults);

    this.model = new gfw.ui.model.ShareDialog();

    this.model.on('change:hidden', this.toggle);
    this.model.on('change:mode', this._toggleMode);

    this.$backdrop = $('.backdrop');

    var template = $('#share_dialog-template').html();

    this.template = new cdb.core.Template({
      template: template,
      type: 'mustache'
    });
  },

  show: function() {
    this._setLink();
    this.$el.fadeIn(250);
    this.$backdrop.show();

    this._initBindings();
  },

  hide: function(e) {
    e && e.preventDefault();

    var that = this;

    this.$el.fadeOut(250, function() {
      that._setMode('link');
    });

    this.$backdrop.fadeOut(250);

    this._disableBindings();
  },

  _initBindings: function() {
    var that = this;

    $(document).on('keydown', this._onKeyDown);

    this.$backdrop.on('click', function() {
      that.hide();
    });

    this.$input.on('click',function(){
      this.select()
    });
  },

  _disableBindings: function() {
    $(document).off('keydown');

    this.$backdrop.off('click');
  },

  _setLink: function() {
    var that = this;

    // Disable textarea
    this.$input.val('');
    this.$loading.show();

    // Get link short
    this._generateShortUrl(window.location.href, function(url) {
      that.$input.val(url);

      that.$share.find('.twitter').attr('href', "https://twitter.com/share?url=" + url);
      that.$share.find('.facebook').attr('href', "https://www.facebook.com/sharer.php?u=" + url);
      that.$share.find('.google_plus').attr('href', "https://plus.google.com/share?url=" + url);

      that.$loading.hide();
    });
  },

  _setEmbed: function() {
    var $body  = $('body'),
        dim_x = 640,
        dim_y = 530;

    if (!$body.hasClass('home')) {
      dim_x = 1000;
      dim_y = ($body.hasClass('show')) ? 480 : 600;
    }

    this.$input.val('<iframe width="' +dim_x+ '" height="' +dim_y+ '" frameborder="0" src="'+window.location.origin + '/embed' + window.location.pathname + window.location.search+'"></iframe>');
  },

  _generateShortUrl: function(url, callback) {
    $.ajax({
      url:"https://api-ssl.bitly.com/v3/shorten?longUrl=" + encodeURIComponent(url) + "&login=" + this.options.bitly.login + "&apiKey=" + this.options.bitly.key,
      type:"GET",
      async: false,
      dataType: 'jsonp',
      success: function(r) {
        if (!r.data.url) {
          callback && callback(url);

          throw new Error('BITLY doesn\'t allow localhost alone as domain, use localhost.lan for example');
        } else {
          callback && callback(r.data.url)
        }
      },
      error: function(e) { callback && callback(url) }
    });
  },

  _onKeyDown: function(e) {
    if (e.which == 27) this._onEscKey(e);
  },

  _onEscKey: function(e) {
    e && e.preventDefault();

    this.hide();
  },

  _onClickMode: function(e) {
    e && e.preventDefault();

    var $target = $(e.target),
        mode = $target.attr('data-embed');

    if (mode != this.model.get('mode')) {
      $('.mode_menu li').removeClass('selected');
      $target.closest('li').addClass('selected');

      this._setMode(mode);
    }
  },

  _setMode: function(mode) {
    this.model.set({ mode: mode });
  },

  _toggleMode: function() {
    var mode = this.model.get('mode');

    if (mode === 'url') {
      this.model.set({
        help: this.model.defaults.help,
        button_title: this.model.defaults.button_title
      });

      this._setLink();
    } else if (mode === 'embed') {
      this.model.set({
        help: 'Click and paste HTML to embed in website',
        button_title: 'Copy code'
      });

      this._setEmbed();
    }

    this.$help.html(this.model.get('help'));
    this.$button.html(this.model.get('button_title'));
  },

  _openPrint: function() {
    var url = window.location.origin + '/embed' + window.location.pathname;
    if (window.location.search) {
      url += window.location.search + '&print=map';
    } else {
      url += '?print=map';
    }
    window.location = url;
  },

  render: function() {
    var that = this;

    this.$el.append(this.template.render( this.model.toJSON() ));

    this.$help = this.$el.find('.help span');
    this.$input = this.$el.find('.field');
    this.$button = this.$el.find('.copy');
    this.$loading = this.$el.find('.share_loading');
    this.$share = this.$el.find('.share_buttons');

    return this.$el;
  }
});
